@page "/products"
@using DataEntities
@using Store.Services
@inject ProductService ProductService
@inject IConfiguration Configuration
@attribute [StreamRendering(true)]

<PageTitle>Products</PageTitle>

<div class="products-container">
    <h1>Products</h1>

    <p>Here are some of our amazing outdoor products that you can purchase.</p>

    @if (products == null)
    {
        <div class="loading-spinner">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else
    {
        <div class="products-grid">
            @foreach (var product in products)
            {
                <ProductCard Product="product" ImagePrefix="@imagePrefix" />
            }
        </div>
    }
</div>

@code {
    private List<Product>? products;
    private string imagePrefix = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        // Simulate asynchronous loading to demonstrate streaming rendering
        await Task.Delay(500);
        imagePrefix = Configuration["ImagePrefix"];
        products = await ProductService.GetProducts();
    }
}